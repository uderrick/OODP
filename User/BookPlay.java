package handongplay3.User;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import javax.swing.JOptionPane;

import handongplay3.Storage.Storage;
import handongplay3.Payment.PaymentChoice;

@SuppressWarnings("serial")
public class BookPlay extends javax.swing.JFrame {

	public static String payPlay="";
	 Connection con = null;
	 Statement stmt = null;
    /**
     * Creates new form BookPlay
     * @throws SQLException 
     */
    public BookPlay() throws SQLException {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     * @throws SQLException 
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() throws SQLException {
    	
    	
     //Connection con = null;
			
			
   		
			try {
							Class.forName("com.mysql.jdbc.Driver").newInstance();
				} catch (InstantiationException | IllegalAccessException | ClassNotFoundException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
				}
			try {
								con = DriverManager.getConnection("jdbc:mysql://localhost?autoReconnect=true&useSSL=false", "root", "12skdmsdn");
				} catch (SQLException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
						}
				try {
						if (!con.isClosed())
								System.out.println("Successfully connected to MySQL server.");
					} catch (SQLException e) {
							// TODO Auto-generated catch block
								e.printStackTrace();
								}

					//					Statement stmt = null;
											try {
													stmt = (Statement) con.createStatement();
												} catch (SQLException e) {
														// TODO Auto-generated catch block
													e.printStackTrace();
												}
												try {
															stmt.execute("use playinfo") ;
													} catch (SQLException e) {
															// TODO Auto-generated catch block
															e.printStackTrace();
														}
//===============================================//   
							Storage [] pi = new Storage[7];
							
						 for( int i = 0; i < 7 ; i++)
					    {
							 	pi[i] = new Storage();
				
					    }
			
							stmt.executeQuery("SELECT title,player,date,seat FROM user");
						    ResultSet rs = stmt.getResultSet(); 		
						
				
				
						   
						    for( int i = 0; rs.next() ; i++)
						    {
						    	pi[i].get_title(rs.getString("title"));
						    	pi[i].get_player(rs.getString("player"));
						    	pi[i].get_date(rs.getString("date"));
						    	pi[i].get_content(rs.getString("seat"));
						    }
						    
						    rs.close();

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        payBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            	 {pi[0].return_title(),pi[0].return_player(),pi[0].return_date(),pi[0].return_content()},
                 {pi[1].return_title(),pi[1].return_player(),pi[1].return_date(),pi[1].return_content()},
                 {pi[2].return_title(),pi[2].return_player(),pi[2].return_date(),pi[2].return_content()},
                 {pi[3].return_title(),pi[3].return_player(),pi[3].return_date(),pi[3].return_content()},
                 {pi[4].return_title(),pi[4].return_player(),pi[4].return_date(),pi[4].return_content()},
                 {pi[5].return_title(),pi[5].return_player(),pi[5].return_date(),pi[5].return_content()},
                 {pi[6].return_title(),pi[6].return_player(),pi[6].return_date(),pi[6].return_content()},
                 {null, null, null, null, null}
            },
            new String [] {
                "Title ", "Player", "Date", "Seat"
            }
        ) {
         
        });
        jScrollPane1.setViewportView(jTable1);

        payBtn.setText("결제 하기");
        payBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
					payBtnActionPerformed(evt);
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });

        cancelBtn.setText("예약 취소");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
					cancelBtnActionPerformed(evt);
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });

        String item1 = pi[0].return_title()+"/"+pi[0].return_player()+"/"+pi[0].return_date()+"/"+pi[0].return_content();
        String item2 = pi[1].return_title()+"/"+pi[1].return_player()+"/"+pi[1].return_date()+"/"+pi[1].return_content();
        String item3 = pi[2].return_title()+"/"+pi[2].return_player()+"/"+pi[2].return_date()+"/"+pi[2].return_content();
        String item4 = pi[3].return_title()+"/"+pi[3].return_player()+"/"+pi[3].return_date()+"/"+pi[3].return_content();
        String item5 = pi[4].return_title()+"/"+pi[4].return_player()+"/"+pi[4].return_date()+"/"+pi[4].return_content();
        String item6 = pi[5].return_title()+"/"+pi[5].return_player()+"/"+pi[5].return_date()+"/"+pi[5].return_content();
        String item7 = pi[6].return_title()+"/"+pi[6].return_player()+"/"+pi[6].return_date()+"/"+pi[6].return_content();
        
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {  item1,item2,item3,item4,item5,item6,item7}));
       
        
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(payBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(56, 56, 56))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(48, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(payBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(81, 81, 81))
        );
        
        pack();
    }// </editor-fold>                        

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {                                          
    	payPlay =   jComboBox1.getSelectedItem().toString();
   
    	String []str_arr = payPlay.split("/");
    	
    	//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@2
    	//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    	//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@예약취소 부분!!!
    	stmt = (Statement) con.createStatement();
    	int r = stmt.executeUpdate("delete from user where "+"title = "+"\'"+str_arr[0]+"\'"+"and player = "+"\'"+str_arr[1]+"\'"+"and date = "+"\'"+str_arr[2]+"\'"+"and seat = "+"\'"+str_arr[3]+"\'");
    	
    	if( r == 0)
    	{
    		JOptionPane.showMessageDialog(null, "삭제할 데이터를 찾지 못했습니다.");
    	}
    	
    	
    	
    	
    	
    	JOptionPane.showMessageDialog(null, "예약 취소가 완료되었습니다.");
    	this.setVisible(false);
    	new HandongPlay().setVisible(true);
    
    }                                         

    private void payBtnActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {      
    	
    	//기존 예약내역 삭제시켜 줘야함!!!!!!!!!!!!! SQL 삭제 명령 ~~~~~
    	/////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    	//@@@@@@@@@@@@@@@@@@@@@@@@@
    	payPlay =   jComboBox1.getSelectedItem().toString();
    	   
    	String []str_arr = payPlay.split("/");
    	
    	//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@2
    	//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    	//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@예약취소 부분!!!
    	stmt = (Statement) con.createStatement();
    	int r = stmt.executeUpdate("delete from user where "+"title = "+"\'"+str_arr[0]+"\'"+"and player = "+"\'"+str_arr[1]+"\'"+"and date = "+"\'"+str_arr[2]+"\'"+"and seat = "+"\'"+str_arr[3]+"\'");
    	
    	if( r == 0)
    	{
    		JOptionPane.showMessageDialog(null, "삭제할 데이터를 찾지 못했습니다.");
    	}
    	
    	
    	
    	
    	
    	
    	
   
       this.setVisible(false);
       new PaymentChoice().setVisible(true);
    }                                      

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookPlay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookPlay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookPlay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookPlay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
					new BookPlay().setVisible(true);
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton cancelBtn;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton payBtn;
    // End of variables declaration                   
}

